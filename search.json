[{"title":"Hello World","url":"/1970/01/01/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","categories":["類別Hello"],"tags":["Hello"]},{"title":"My First Post","url":"/2024/08/08/My-First-Post/","content":"<p>這是我的第一篇文章的內容。你可以使用 Markdown 語法來格式化你的文章，例如 <strong>粗體</strong>、<em>斜體</em> 和 <a href=\"https://github.com/weitsung50110\">鏈接</a>。</p>\n<h3 id=\"一個美好的清晨\"><a href=\"#一個美好的清晨\" class=\"headerlink\" title=\"一個美好的清晨\"></a>一個美好的清晨</h3><p>今天的清晨格外美好，<strong>陽光</strong>透過窗戶灑進房間，映照在地板上。我靜靜地坐在窗邊，品味著清晨的第一杯咖啡。</p>\n<p>這個城市，每天早晨的空氣都是那麼清新宜人，街上行人匆匆忙忙，都在追逐各自的生活軌跡。我卻喜歡這份寧靜，享受獨自的時光。</p>\n<ul>\n<li>窗外的花草，<em>微風</em>拂過，輕輕搖曳，仿佛在跟我說話。</li>\n<li>我聽見了晨鳥的歌聲，清脆悅耳，像是在為這美好的一天奏響序曲。</li>\n</ul>\n<p>清晨的陽光，如此溫暖，照亮了我的心房，讓我感受到生活的美好與希望。我深深相信，每一個新的清晨都是一個新的開始，充滿無限可能。</p>\n<p>希望每個人都能在這晨曦中找到屬於自己的快樂和安寧。讓我們一起迎接這美好的一天吧！</p>\n<pre><code>    Love and Peace.\n</code></pre>\n","categories":["類別First"],"tags":["標籤1"]},{"title":"關於archives的設定","url":"/2024/08/09/archives/","content":"<h3 id=\"錯誤\"><a href=\"#錯誤\" class=\"headerlink\" title=\"錯誤\"></a>錯誤</h3><p>這邊很妙 當title設為archives的時候</p>\n<p>儘管layout設定archives，但總會連到index.ejs上面</p>\n<p>應該是&#x2F;archives路徑已經預設被指到index.ejs了</p>\n<p>所以歸檔的部分，我決定換名字 改為archives_N</p>\n<h3 id=\"正確\"><a href=\"#正確\" class=\"headerlink\" title=\"正確\"></a>正確</h3><p>命名的時候輸入archive.ejs會自動導入archive.ejs裡面</p>\n<p>如果title設為archives.ejs的時候，當然會沒有反應</p>\n<p>導致變成連到index.ejs上面</p>\n<h3 id=\"tag-ejs\"><a href=\"#tag-ejs\" class=\"headerlink\" title=\"tag.ejs\"></a>tag.ejs</h3><p>tag.ejs才抓的到<br>如果打tags.ejs會抓不到</p>\n<h3 id=\"當本地-css看的到改變-上傳到github-page卻看不到改變\"><a href=\"#當本地-css看的到改變-上傳到github-page卻看不到改變\" class=\"headerlink\" title=\"當本地.css看的到改變 上傳到github page卻看不到改變?!\"></a>當本地.css看的到改變 上傳到github page卻看不到改變?!</h3><p>進去&#x2F;public裡面的.css查看 更改的語法是否還在<br>當<code>huxo g -d</code>後 有些css語法會自己消失&gt;&lt;”</p>\n<h3 id=\"總結\"><a href=\"#總結\" class=\"headerlink\" title=\"總結\"></a>總結</h3><p><strong><code>url_for</code> 函數的用途</strong>： </p>\n<ul>\n<li>用於生成靜態資源的 URL（如 CSS、JavaScript、圖片等）。 </li>\n<li>用於生成網站文章和頁面的 URL。 </li>\n<li>url_for 會生成相對於網站根目錄的 URL。例如，url_for(‘css&#x2F;style.css’) 會生成 &#x2F;css&#x2F;style.css。這樣的 URL 可以直接用於靜態資源，如 CSS、JavaScript 和圖片。</li>\n</ul>\n<p><strong>如何使用</strong>： </p>\n<ul>\n<li><p>在模板中使用 <code>&lt;%- url_for(&#39;path&#39;) %&gt;</code> 來生成正確的 URL</p>\n<pre><code>  &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%- url_for(&#39;css/style.css&#39;) %&gt;&quot;&gt;\n  &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%- url_for(&#39;css/style_post.css&#39;) %&gt;&quot;&gt;\n  &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%- url_for(&#39;css/style_header.css&#39;) %&gt;&quot;&gt;\n  &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%- url_for(&#39;css/style_sidebar.css&#39;) %&gt;&quot;&gt;\n  &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%- url_for(&#39;css/style_archives.css&#39;) %&gt;&quot;&gt;\n  &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%- url_for(&#39;css/style_index_post.css&#39;) %&gt;&quot;&gt;\n</code></pre>\n</li>\n</ul>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li>layout檔案的命名參考下面這個repo基本不會錯<br><a href=\"https://github.com/henryhuang/hexo-theme-aloha/tree/master/layout\">https://github.com/henryhuang/hexo-theme-aloha/tree/master/layout</a></li>\n</ul>\n","tags":["Hello","教學"]},{"title":"RWD教學","url":"/2024/09/04/RWD%E6%95%99%E5%AD%B8/","content":"<p>Q:<br>我現在有6個.css檔案 依照不同.ejs進行分類<br>我現在想要做成RWD響應式網站 請問怎麼辦?<br>A:</p>\n<h3 id=\"1-合併所有-CSS-文件\"><a href=\"#1-合併所有-CSS-文件\" class=\"headerlink\" title=\"1. 合併所有 CSS 文件\"></a>1. 合併所有 CSS 文件</h3><p>首先，將所有 CSS 文件的內容合併到一個主 CSS 文件中，例如 <code>main.css</code>。這樣可以集中管理樣式，並在一個地方進行響應式設計的調整。</p>\n<pre><code>    /* main.css */\n    /* 引入其他 CSS 文件 */\n    @import url(&#39;style.css&#39;);\n    @import url(&#39;style_archives.css&#39;);\n    @import url(&#39;style_header.css&#39;);\n    @import url(&#39;style_index_post.css&#39;);\n    @import url(&#39;style_post.css&#39;);\n    @import url(&#39;style_sidebar.css&#39;);\n\n    /* 響應式設計 */\n    @media (max-width: 768px) &#123;\n        .home-intro h2 &#123;\n        font-size: 1.5em;\n        &#125;\n    \n        header &#123;\n        flex-direction: column;\n        &#125;\n    \n        .header-content &#123;\n        flex-direction: column;\n        &#125;\n    \n        nav &#123;\n        flex-direction: column;\n        align-items: flex-start;\n        &#125;\n    \n        nav a &#123;\n        margin-bottom: 10px;\n        &#125;\n    \n        /* Archives 主內容 */\n        main &#123;\n        padding: 10px;\n        &#125;\n    &#125;\n    \n    @media (max-width: 480px) &#123;\n        .home-intro h2 &#123;\n        font-size: 1.2em;\n        &#125;\n    \n        header &#123;\n        padding: 15px;\n        &#125;\n    \n        .header-content &#123;\n        flex-direction: column;\n        align-items: center;\n        &#125;\n    \n        nav &#123;\n        align-items: center;\n        &#125;\n    \n        button &#123;\n        padding: 8px 16px;\n        font-size: 0.9em;\n        &#125;\n    \n        /* Archives 主內容 */\n        main &#123;\n        padding: 5px;\n        &#125;\n    &#125;\n</code></pre>\n<p>Q:<br>@media 放在.css最下面 代表當 寬度小於480px時 他就會把header 從原本的大小 條誠新的大小嗎 覆蓋原本的?<br>A:<br>是的，您理解得完全正確。@media 查詢在 CSS 文件中的位置確實會影響它的應用，但其實 @media 查詢的作用是根據條件（如屏幕寬度）覆蓋或添加樣式。</p>\n<h3 id=\"如何工作\"><a href=\"#如何工作\" class=\"headerlink\" title=\"如何工作\"></a>如何工作</h3><ol>\n<li><p><strong>基本樣式</strong>：在 CSS 文件中，首先定義的樣式是對所有設備和屏幕尺寸的基礎樣式。 </p>\n</li>\n<li><p><strong>媒體查詢</strong>：<code>@media</code> 查詢用於在特定條件下（如屏幕寬度小於 480px）覆蓋或添加樣式。這些樣式會在滿足條件時應用並覆蓋基礎樣式。</p>\n<pre><code> 這是範例唷~~\n /* 基礎樣式 */\n header &#123;\n background: linear-gradient(135deg, #81d4fa, #4fc3f7);\n padding: 20px;\n display: flex;\n flex-direction: row;\n align-items: center;\n &#125;\n\n /* 響應式設計 */\n @media (max-width: 768px) &#123;\n header &#123;\n     flex-direction: column;\n     padding: 15px;\n &#125;\n &#125;\n\n @media (max-width: 480px) &#123;\n header &#123;\n     padding: 10px;\n &#125;\n &#125;\n</code></pre>\n</li>\n</ol>\n<h3 id=\"解釋：\"><a href=\"#解釋：\" class=\"headerlink\" title=\"解釋：\"></a>解釋：</h3><ul>\n<li><strong>基礎樣式</strong>：所有設備和屏幕尺寸都會首先應用這些樣式。<code>header</code> 元素會有線性漸變背景、20px 的內邊距，並以橫向排列方式顯示內容。 </li>\n<li><strong>媒體查詢</strong>： * 當屏幕寬度小於等於 768px 時，<code>header</code> 的顯示方式會變成縱向排列（<code>flex-direction: column</code>），內邊距變為 15px。</li>\n<li>當屏幕寬度小於等於 768px 時，<code>header</code> 的顯示方式會變成縱向排列（<code>flex-direction: column</code>），內邊距變為 15px。 * 當屏幕寬度小於等於 480px 時，<code>header</code> 的內邊距進一步減少為 10px。</li>\n</ul>\n<h3 id=\"覆蓋和添加\"><a href=\"#覆蓋和添加\" class=\"headerlink\" title=\"覆蓋和添加\"></a>覆蓋和添加</h3><p>當屏幕寬度小於 768px 時，第一個媒體查詢會將 <code>header</code> 的排列方式從橫向改為縱向，並修改內邊距為 15px。當屏幕寬度進一步縮小到 480px 以下時，第二個媒體查詢會進一步調整內邊距為 10px。這樣，第二個媒體查詢中的樣式會在第一個媒體查詢的樣式基礎上進行覆蓋。</p>\n<h3 id=\"載入順序\"><a href=\"#載入順序\" class=\"headerlink\" title=\"載入順序\"></a>載入順序</h3><p>CSS 的載入順序確保了後面定義的樣式會覆蓋前面的樣式。媒體查詢本身不會影響 CSS 文件的順序，只是根據條件選擇性地應用樣式。無論媒體查詢放在 CSS 文件的哪個位置，只要它們符合條件，它們就會生效並覆蓋之前的樣式。 這種層疊和覆蓋的機制使得響應式設計變得靈活且易於管理。</p>\n","tags":["Hello","教學"]},{"title":"hexo-theme-animal的Github所有相關repositories","url":"/2024/09/10/hexo-theme-animal%E7%9A%84Github%E6%89%80%E6%9C%89%E7%9B%B8%E9%97%9Crepositories/","content":"<p>在這篇文章中，我將介紹三個 GitHub 上的相關 repositories，它們都是關於 Hexo 主題的開發和使用。</p>\n<h2 id=\"1-hexo-theme-animal\"><a href=\"#1-hexo-theme-animal\" class=\"headerlink\" title=\"1. hexo-theme-animal\"></a>1. <a href=\"https://github.com/weitsung50110/hexo-theme-animal\">hexo-theme-animal</a></h2><p>這是我開發的一個 Hexo 主題，名為 <code>hexo-theme-animal</code>。這個主題提供了多種自定義選項和現代化的設計，適合用於個人博客或作品集。你可以在 <a href=\"https://github.com/weitsung50110/hexo-theme-animal\">這裡</a> 查看詳細信息和使用說明。</p>\n<h2 id=\"2-hexo-theme-animal-site\"><a href=\"#2-hexo-theme-animal-site\" class=\"headerlink\" title=\"2. hexo-theme-animal-site\"></a>2. <a href=\"https://github.com/weitsung50110/hexo-theme-animal-site\">hexo-theme-animal-site</a></h2><p>這個 repository 包含了使用 <code>hexo-theme-animal</code> 主題的示例網站。你可以參考 <a href=\"https://github.com/weitsung50110/hexo-theme-animal-site\">這個連結</a> 來查看完整的網站實例和部署過程。</p>\n<h2 id=\"3-hexo-theme-animal-repo\"><a href=\"#3-hexo-theme-animal-repo\" class=\"headerlink\" title=\"3. hexo-theme-animal_repo\"></a>3. <a href=\"https://github.com/weitsung50110/hexo-theme-animal_repo\">hexo-theme-animal_repo</a></h2><p>這是關於 <code>hexo-theme-animal</code> 主題的補充 repository，包含了一些額外的資料和示例。詳細內容可以參見 <a href=\"https://github.com/weitsung50110/hexo-theme-animal_repo\">這裡</a>。</p>\n<hr>\n<p>希望這篇文章能夠幫助你了解這些相關的 GitHub repositories。</p>\n","categories":["GitHub"],"tags":["GitHub","Hexo","主題"]}]