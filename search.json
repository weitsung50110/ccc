[{"title":"RWD教學","url":"/hexo-theme-animal-site/2024/09/04/RWD%E6%95%99%E5%AD%B8/","content":"<h3 id=\"Q-我現在有-6-個-css-檔案，依照不同-ejs-進行分類。我現在想要做成-RWD-響應式網站，請問怎麼辦？\"><a href=\"#Q-我現在有-6-個-css-檔案，依照不同-ejs-進行分類。我現在想要做成-RWD-響應式網站，請問怎麼辦？\" class=\"headerlink\" title=\"Q: 我現在有 6 個 .css 檔案，依照不同 .ejs 進行分類。我現在想要做成 RWD 響應式網站，請問怎麼辦？\"></a>Q: 我現在有 6 個 .css 檔案，依照不同 .ejs 進行分類。我現在想要做成 RWD 響應式網站，請問怎麼辦？</h3><h3 id=\"A\"><a href=\"#A\" class=\"headerlink\" title=\"A:\"></a>A:</h3><h3 id=\"1-合併所有-CSS-文件\"><a href=\"#1-合併所有-CSS-文件\" class=\"headerlink\" title=\"1. 合併所有 CSS 文件\"></a>1. 合併所有 CSS 文件</h3><p>首先，將所有 CSS 文件的內容合併到一個主 CSS 文件中，例如 <code>main.css</code>。這樣可以集中管理樣式，並在一個地方進行響應式設計的調整。</p>\n<pre><code>    /* main.css */\n    /* 引入其他 CSS 文件 */\n    @import url(&#39;style.css&#39;);\n    @import url(&#39;style_archives.css&#39;);\n    @import url(&#39;style_header.css&#39;);\n    @import url(&#39;style_index_post.css&#39;);\n    @import url(&#39;style_post.css&#39;);\n    @import url(&#39;style_sidebar.css&#39;);\n\n    /* 響應式設計 */\n    @media (max-width: 768px) &#123;\n        .home-intro h2 &#123;\n        font-size: 1.5em;\n        &#125;\n    \n        header &#123;\n        flex-direction: column;\n        &#125;\n    \n        .header-content &#123;\n        flex-direction: column;\n        &#125;\n    \n        nav &#123;\n        flex-direction: column;\n        align-items: flex-start;\n        &#125;\n    \n        nav a &#123;\n        margin-bottom: 10px;\n        &#125;\n    \n        /* Archives 主內容 */\n        main &#123;\n        padding: 10px;\n        &#125;\n    &#125;\n    \n    @media (max-width: 480px) &#123;\n        .home-intro h2 &#123;\n        font-size: 1.2em;\n        &#125;\n    \n        header &#123;\n        padding: 15px;\n        &#125;\n    \n        .header-content &#123;\n        flex-direction: column;\n        align-items: center;\n        &#125;\n    \n        nav &#123;\n        align-items: center;\n        &#125;\n    \n        button &#123;\n        padding: 8px 16px;\n        font-size: 0.9em;\n        &#125;\n    \n        /* Archives 主內容 */\n        main &#123;\n        padding: 5px;\n        &#125;\n    &#125;\n</code></pre>\n<h3 id=\"Q-media-放在-css-最下面，代表當寬度小於-480px-時，它會把-header-從原本的大小改成新的大小嗎？會覆蓋原本的樣式嗎？\"><a href=\"#Q-media-放在-css-最下面，代表當寬度小於-480px-時，它會把-header-從原本的大小改成新的大小嗎？會覆蓋原本的樣式嗎？\" class=\"headerlink\" title=\"Q: @media 放在 .css 最下面，代表當寬度小於 480px 時，它會把 header 從原本的大小改成新的大小嗎？會覆蓋原本的樣式嗎？\"></a>Q: @media 放在 .css 最下面，代表當寬度小於 480px 時，它會把 header 從原本的大小改成新的大小嗎？會覆蓋原本的樣式嗎？</h3><h3 id=\"A-1\"><a href=\"#A-1\" class=\"headerlink\" title=\"A:\"></a>A:</h3><p>是的，您理解得完全正確。<code>@media</code> 查詢在 CSS 文件中的位置確實會影響它的應用，但 <code>@media</code> 查詢的作用是根據條件（如屏幕寬度）覆蓋或添加樣式。</p>\n<h3 id=\"如何工作\"><a href=\"#如何工作\" class=\"headerlink\" title=\"如何工作\"></a>如何工作</h3><ol>\n<li><p><strong>基本樣式</strong>：在 CSS 文件中，首先定義的樣式是對所有設備和屏幕尺寸的基礎樣式。 </p>\n</li>\n<li><p><strong>媒體查詢</strong>：<code>@media</code> 查詢用於在特定條件下（如屏幕寬度小於 480px）覆蓋或添加樣式。這些樣式會在滿足條件時應用並覆蓋基礎樣式。</p>\n<pre><code> 這是範例唷~~\n /* 基礎樣式 */\n header &#123;\n background: linear-gradient(135deg, #81d4fa, #4fc3f7);\n padding: 20px;\n display: flex;\n flex-direction: row;\n align-items: center;\n &#125;\n\n /* 響應式設計 */\n @media (max-width: 768px) &#123;\n header &#123;\n     flex-direction: column;\n     padding: 15px;\n &#125;\n &#125;\n\n @media (max-width: 480px) &#123;\n header &#123;\n     padding: 10px;\n &#125;\n &#125;\n</code></pre>\n</li>\n</ol>\n<h3 id=\"解釋：\"><a href=\"#解釋：\" class=\"headerlink\" title=\"解釋：\"></a>解釋：</h3><ul>\n<li><strong>基礎樣式</strong>：所有設備和屏幕尺寸都會首先應用這些樣式。<code>header</code> 元素會有線性漸變背景、20px 的內邊距，並以橫向排列方式顯示內容。 </li>\n<li><strong>媒體查詢</strong>： * 當屏幕寬度小於等於 768px 時，<code>header</code> 的顯示方式會變成縱向排列（<code>flex-direction: column</code>），內邊距變為 15px。</li>\n<li>當屏幕寬度小於等於 768px 時，<code>header</code> 的顯示方式會變成縱向排列（<code>flex-direction: column</code>），內邊距變為 15px。 * 當屏幕寬度小於等於 480px 時，<code>header</code> 的內邊距進一步減少為 10px。</li>\n</ul>\n<h3 id=\"覆蓋和添加\"><a href=\"#覆蓋和添加\" class=\"headerlink\" title=\"覆蓋和添加\"></a>覆蓋和添加</h3><p>當屏幕寬度小於 768px 時，第一個媒體查詢會將 <code>header</code> 的排列方式從橫向改為縱向，並修改內邊距為 15px。當屏幕寬度進一步縮小到 480px 以下時，第二個媒體查詢會進一步調整內邊距為 10px。這樣，第二個媒體查詢中的樣式會在第一個媒體查詢的樣式基礎上進行覆蓋。</p>\n<h3 id=\"載入順序\"><a href=\"#載入順序\" class=\"headerlink\" title=\"載入順序\"></a>載入順序</h3><p>CSS 的載入順序確保了後面定義的樣式會覆蓋前面的樣式。媒體查詢本身不會影響 CSS 文件的順序，只是根據條件選擇性地應用樣式。無論媒體查詢放在 CSS 文件的哪個位置，只要它們符合條件，它們就會生效並覆蓋之前的樣式。 這種層疊和覆蓋的機制使得響應式設計變得靈活且易於管理。</p>\n","categories":["Hexo主題"],"tags":["教學","RWD","Hexo主題"]},{"title":"hexo-theme-animal的Github所有相關repositories","url":"/hexo-theme-animal-site/2024/09/10/hexo-theme-animal%E7%9A%84Github%E6%89%80%E6%9C%89%E7%9B%B8%E9%97%9Crepositories/","content":"<h2 id=\"GitHub-上的相關-repositories\"><a href=\"#GitHub-上的相關-repositories\" class=\"headerlink\" title=\"GitHub 上的相關 repositories\"></a>GitHub 上的相關 repositories</h2><p>在這篇文章中，我將介紹三個 GitHub 上的相關 repositories，它們都是關於 Hexo 主題的開發和使用。</p>\n<h3 id=\"1-hexo-theme-animal\"><a href=\"#1-hexo-theme-animal\" class=\"headerlink\" title=\"1. hexo-theme-animal\"></a>1. <a href=\"https://github.com/weitsung50110/hexo-theme-animal\">hexo-theme-animal</a></h3><p>這是我開發的一個 Hexo 主題，名為 <code>hexo-theme-animal</code>。這個主題提供了多種自定義選項和現代化的設計，適合用於個人博客或作品集。你可以在 <a href=\"https://github.com/weitsung50110/hexo-theme-animal\">這裡</a> 查看詳細信息和使用說明。</p>\n<h3 id=\"2-hexo-theme-animal-site\"><a href=\"#2-hexo-theme-animal-site\" class=\"headerlink\" title=\"2. hexo-theme-animal-site\"></a>2. <a href=\"https://github.com/weitsung50110/hexo-theme-animal-site\">hexo-theme-animal-site</a></h3><p>這個 repository 包含了使用 <code>hexo-theme-animal</code> 主題的示例網站。你可以參考 <a href=\"https://github.com/weitsung50110/hexo-theme-animal-site\">這個連結</a> 來查看完整的網站實例和部署過程。</p>\n<h3 id=\"3-hexo-theme-animal-repo\"><a href=\"#3-hexo-theme-animal-repo\" class=\"headerlink\" title=\"3. hexo-theme-animal_repo\"></a>3. <a href=\"https://github.com/weitsung50110/hexo-theme-animal_repo\">hexo-theme-animal_repo</a></h3><p>這是關於 <code>hexo-theme-animal</code> 主題的補充 repository，包含了一些額外的資料和示例。詳細內容可以參見 <a href=\"https://github.com/weitsung50110/hexo-theme-animal_repo\">這裡</a>。</p>\n<hr>\n<p>希望這篇文章能夠幫助你了解這些相關的 GitHub repositories。</p>\n<h2 id=\"安裝的插件版本\"><a href=\"#安裝的插件版本\" class=\"headerlink\" title=\"安裝的插件版本\"></a>安裝的插件版本</h2><h3 id=\"Node-js-版本，我裡面是安裝20-16-0版本\"><a href=\"#Node-js-版本，我裡面是安裝20-16-0版本\" class=\"headerlink\" title=\"Node.js 版本，我裡面是安裝20.16.0版本\"></a>Node.js 版本，我裡面是安裝20.16.0版本</h3><table>\n<thead>\n<tr>\n<th>REPOSITORY</th>\n<th>TAG</th>\n<th>IMAGE ID</th>\n<th>CREATED</th>\n<th>SIZE</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>node</td>\n<td>20.16.0</td>\n<td>1a8e51cfa7a5</td>\n<td>6 weeks ago</td>\n<td>1.1GB</td>\n</tr>\n</tbody></table>\n<h3 id=\"npm-依賴項，npm裡面還有安裝這些依賴\"><a href=\"#npm-依賴項，npm裡面還有安裝這些依賴\" class=\"headerlink\" title=\"npm 依賴項，npm裡面還有安裝這些依賴\"></a>npm 依賴項，npm裡面還有安裝這些依賴</h3><p>以下是 <code>npm list --depth=0</code> 輸出的依賴項列表：</p>\n<pre><code>root@73fbc4a3b07a:/app/blog20240904# npm list --depth=0\nhexo-site@0.0.0 /app/blog20240904\n+-- hexo-generator-archive@2.0.0\n+-- hexo-generator-category@2.0.0\n+-- hexo-generator-index@4.0.0\n+-- hexo-generator-searchdb@1.4.1\n+-- hexo-generator-tag@2.0.0\n+-- hexo-renderer-ejs@2.0.0\n+-- hexo-renderer-marked@6.3.0\n+-- hexo-renderer-stylus@3.0.1\n+-- hexo-server@3.0.0\n+-- hexo-theme-landscape@1.0.0\n+-- hexo@7.3.0\n`-- moment-timezone@0.5.45\n</code></pre>\n<ul>\n<li><p><strong>Hexo 及相關插件</strong></p>\n<ul>\n<li><code>hexo</code> @7.3.0</li>\n<li><code>hexo-generator-archive</code> @2.0.0</li>\n<li><code>hexo-generator-category</code> @2.0.0</li>\n<li><code>hexo-generator-index</code> @4.0.0</li>\n<li><code>hexo-generator-searchdb</code> @1.4.1</li>\n<li><code>hexo-generator-tag</code> @2.0.0</li>\n<li><code>hexo-renderer-ejs</code> @2.0.0</li>\n<li><code>hexo-renderer-marked</code> @6.3.0</li>\n<li><code>hexo-renderer-stylus</code> @3.0.1</li>\n<li><code>hexo-server</code> @3.0.0</li>\n<li><code>hexo-theme-landscape</code> @1.0.0</li>\n</ul>\n</li>\n<li><p><strong>Moment.js 及其時區支持</strong></p>\n<ul>\n<li><code>moment-timezone</code> @0.5.45</li>\n</ul>\n</li>\n</ul>\n","categories":["Hexo主題"],"tags":["GitHub","Hexo主題"]},{"title":"關於archives的設定","url":"/hexo-theme-animal-site/2024/08/08/%E9%97%9C%E6%96%BCarchives%E7%9A%84%E8%A8%AD%E5%AE%9A/","content":"<h3 id=\"錯誤\"><a href=\"#錯誤\" class=\"headerlink\" title=\"錯誤\"></a>錯誤</h3><p>當 <code>title</code> 設為 <code>archives</code> 的時候，儘管 <code>layout</code> 設定為 <code>archives</code>，但總會連到 <code>index.ejs</code> 上面。應該是 <code>/archives</code> 路徑已經預設被指向 <code>index.ejs</code> 了。</p>\n<p>所以歸檔的部分，我決定換名字，改為 <code>archives_N</code>。</p>\n<h3 id=\"正確\"><a href=\"#正確\" class=\"headerlink\" title=\"正確\"></a>正確</h3><p>命名的時候輸入 <code>archive.ejs</code> 會自動導入 <code>archive.ejs</code> 裡面。如果 <code>title</code> 設為 <code>archives.ejs</code> 的時候，當然會沒有反應，導致變成連到 <code>index.ejs</code> 上面。</p>\n<h3 id=\"tag-ejs\"><a href=\"#tag-ejs\" class=\"headerlink\" title=\"tag.ejs\"></a>tag.ejs</h3><p><code>tag.ejs</code> 才抓得到。如果打 <code>tags.ejs</code> 會抓不到。</p>\n<h3 id=\"當本地-css-看的到改變，上傳到-GitHub-Pages-卻看不到改變？！\"><a href=\"#當本地-css-看的到改變，上傳到-GitHub-Pages-卻看不到改變？！\" class=\"headerlink\" title=\"當本地 .css 看的到改變，上傳到 GitHub Pages 卻看不到改變？！\"></a>當本地 .css 看的到改變，上傳到 GitHub Pages 卻看不到改變？！</h3><p>進去 <code>/public</code> 裡面的 <code>.css</code> 查看更改的語法是否還在。當執行 <code>hugo g -d</code> 後，有些 CSS 語法會自己消失 &gt;&lt;</p>\n<h3 id=\"總結\"><a href=\"#總結\" class=\"headerlink\" title=\"總結\"></a>總結</h3><p><strong><code>url_for</code> 函數的用途</strong>： </p>\n<ul>\n<li>用於生成靜態資源的 URL（如 CSS、JavaScript、圖片等）。 </li>\n<li>用於生成網站文章和頁面的 URL。 </li>\n<li>url_for 會生成相對於網站根目錄的 URL。例如，url_for(‘css&#x2F;style.css’) 會生成 &#x2F;css&#x2F;style.css。這樣的 URL 可以直接用於靜態資源，如 CSS、JavaScript 和圖片。</li>\n</ul>\n<p><strong>如何使用</strong>： </p>\n<ul>\n<li><p>在模板中使用 <code>&lt;%- url_for(&#39;path&#39;) %&gt;</code> 來生成正確的 URL</p>\n<pre><code>  &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%- url_for(&#39;css/style.css&#39;) %&gt;&quot;&gt;\n  &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%- url_for(&#39;css/style_post.css&#39;) %&gt;&quot;&gt;\n  &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%- url_for(&#39;css/style_header.css&#39;) %&gt;&quot;&gt;\n  &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%- url_for(&#39;css/style_sidebar.css&#39;) %&gt;&quot;&gt;\n  &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%- url_for(&#39;css/style_archives.css&#39;) %&gt;&quot;&gt;\n  &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%- url_for(&#39;css/style_index_post.css&#39;) %&gt;&quot;&gt;\n</code></pre>\n</li>\n</ul>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li>layout檔案的命名參考下面這個repo基本不會錯<br><a href=\"https://github.com/henryhuang/hexo-theme-aloha/tree/master/layout\">https://github.com/henryhuang/hexo-theme-aloha/tree/master/layout</a></li>\n</ul>\n","categories":["Hexo主題"],"tags":["Hexo主題"]},{"title":"GitHub fork實作和介紹：如何將你的 Hexo 修改提交PR到官方 hexojs/site 儲存庫","url":"/hexo-theme-animal-site/2024/09/09/GitHub-fork%E5%AF%A6%E4%BD%9C%E5%92%8C%E4%BB%8B%E7%B4%B9%EF%BC%9A%E5%A6%82%E4%BD%95%E5%B0%87%E4%BD%A0%E7%9A%84-Hexo-%E4%BF%AE%E6%94%B9%E6%8F%90%E4%BA%A4PR%E5%88%B0%E5%AE%98%E6%96%B9-hexojs-site-%E5%84%B2%E5%AD%98%E5%BA%AB/","content":"<p>這篇文章將逐步教你如何將修改提交到 Hexo 官方的 <code>hexojs/site</code>，從 fork 儲存庫到發送 Pull Request，幫助你更好地參與開源社區，並讓更多人受益於你的工作。</p>\n<h2 id=\"GitHub-Fork-介紹\"><a href=\"#GitHub-Fork-介紹\" class=\"headerlink\" title=\"GitHub Fork 介紹\"></a>GitHub Fork 介紹</h2><p>在 GitHub 上，<code>fork</code> 是一個將他人的儲存庫複製到自己帳戶下的操作。這樣做的目的是讓你能在保留原始儲存庫內容的基礎上進行修改，而不影響原始作者的專案。<code>Fork</code> 讓你可以：</p>\n<ul>\n<li><strong>獨立進行修改</strong>：一旦你 fork 了儲存庫，你就有了這個專案的副本，可以自由進行修改或添加功能。</li>\n<li><strong>提交 Pull Request</strong>：當你對 fork 出來的專案進行了修改，並希望將這些改動反饋到原始專案時，可以發送 Pull Request，由原作者審核後決定是否合併你的更改。</li>\n<li><strong>貢獻開源專案</strong>：Fork 是開源專案貢獻者的一個重要工具，允許你從別人的專案基礎上創建自己的功能，並向原始專案提交改進。</li>\n</ul>\n<h2 id=\"Fork-的常見用途\"><a href=\"#Fork-的常見用途\" class=\"headerlink\" title=\"Fork 的常見用途\"></a>Fork 的常見用途</h2><ul>\n<li><strong>參與開源項目</strong>：開發者可以 fork 一個開源專案，添加新功能或修復 bug，然後通過 Pull Request 提交回原始專案。</li>\n<li><strong>自定義專案</strong>：你可以 fork 一個公開的儲存庫，並根據自己的需求修改或擴展它，無需擔心影響原始專案。</li>\n<li><strong>實驗性修改</strong>：fork 後，你可以進行實驗性修改，而不用擔心損壞原始專案。</li>\n</ul>\n<p>簡單來說，fork 是一種複製 GitHub 儲存庫到自己帳戶並進行獨立修改的功能，特別適合於開源協作和個人項目的定制開發。</p>\n<h2 id=\"GitHub-Fork-實作\"><a href=\"#GitHub-Fork-實作\" class=\"headerlink\" title=\"GitHub Fork 實作\"></a>GitHub Fork 實作</h2><p>會想寫這篇是因為我之前做的 Hexo 模板有做一些更新，我是使用 EJS 內嵌式的樣板引擎來進行實作，有開源在我的 GitHub。 因此我需要把我的變動 merge 進去 Hexo 的官方 site 裡面，因此想順便記錄起來，給大家參考。</p>\n<ul>\n<li><strong>GitHub - weitsung50110&#x2F;hexo-theme-animal</strong>: an animal theme. Contribute to weitsung50110&#x2F;hexo-theme-animal development by creating an account on GitHub. <a href=\"https://github.com/weitsung50110/hexo-theme-animal\">github.com</a></li>\n</ul>\n<p>這個 Hexo Theme Animal 模板我有用 GitHub Page 做成部落格網站，有興趣的話歡迎查看: <a href=\"https://weitsung50110.github.io/hexo-theme-animal-site/\">https://weitsung50110.github.io/hexo-theme-animal-site/</a></p>\n<h3 id=\"提交-Pull-Request\"><a href=\"#提交-Pull-Request\" class=\"headerlink\" title=\"提交 Pull Request\"></a>提交 Pull Request</h3><h3 id=\"1-點擊-Fork-按鈕\"><a href=\"#1-點擊-Fork-按鈕\" class=\"headerlink\" title=\"1. 點擊 Fork 按鈕\"></a>1. 點擊 Fork 按鈕</h3><p>在儲存庫的右上角，你會看到一個名為 <code>Fork</code> 的按鈕，點擊它。這會將這個儲存庫複製到你的 GitHub 帳號下。<br><img src=\"/hexo-theme-animal-site/assets/images/GitHub-fork%E5%AF%A6%E4%BD%9C%E5%92%8C%E4%BB%8B%E7%B4%B9%EF%BC%9A%E5%A6%82%E4%BD%95%E5%B0%87%E4%BD%A0%E7%9A%84-Hexo-%E4%BF%AE%E6%94%B9%E6%8F%90%E4%BA%A4PR%E5%88%B0%E5%AE%98%E6%96%B9-hexojs-site-%E5%84%B2%E5%AD%98%E5%BA%AB/0.png\"><br><img src=\"/hexo-theme-animal-site/assets/images/GitHub-fork%E5%AF%A6%E4%BD%9C%E5%92%8C%E4%BB%8B%E7%B4%B9%EF%BC%9A%E5%A6%82%E4%BD%95%E5%B0%87%E4%BD%A0%E7%9A%84-Hexo-%E4%BF%AE%E6%94%B9%E6%8F%90%E4%BA%A4PR%E5%88%B0%E5%AE%98%E6%96%B9-hexojs-site-%E5%84%B2%E5%AD%98%E5%BA%AB/1.png\"></p>\n<h3 id=\"2-Clone-到本地端\"><a href=\"#2-Clone-到本地端\" class=\"headerlink\" title=\"2. Clone 到本地端\"></a>2. Clone 到本地端</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/weitsung50110/site.git</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-建立新的分支\"><a href=\"#3-建立新的分支\" class=\"headerlink\" title=\"3. 建立新的分支\"></a>3. 建立新的分支</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git checkout -b modify240909</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-提交變更\"><a href=\"#4-提交變更\" class=\"headerlink\" title=\"4. 提交變更\"></a>4. 提交變更</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch modify240909</span><br><span class=\"line\">Changes not staged <span class=\"keyword\">for</span> commit:</span><br><span class=\"line\">  (use <span class=\"string\">&quot;git add &lt;file&gt;...&quot;</span> to update what will be committed)</span><br><span class=\"line\">  (use <span class=\"string\">&quot;git restore &lt;file&gt;...&quot;</span> to discard changes <span class=\"keyword\">in</span> working directory)</span><br><span class=\"line\">        modified:   <span class=\"built_in\">source</span>/_data/themes/Animal.yml</span><br><span class=\"line\">        modified:   <span class=\"built_in\">source</span>/themes/screenshots/Animal.png</span><br><span class=\"line\"></span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m <span class=\"string\">&quot;modify github imgs and desc&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-推送變更到-GitHub\"><a href=\"#5-推送變更到-GitHub\" class=\"headerlink\" title=\"5. 推送變更到 GitHub\"></a>5. 推送變更到 GitHub</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git push --set-upstream origin modify240909</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-提交-Pull-Request\"><a href=\"#6-提交-Pull-Request\" class=\"headerlink\" title=\"6. 提交 Pull Request\"></a>6. 提交 Pull Request</h3><p>GitHub 會建議你建立一個 Pull Request。點擊 <code>Compare &amp; pull request</code>，並填寫相關描述，然後提交你的 Pull Request。<br><img src=\"/hexo-theme-animal-site/assets/images/GitHub-fork%E5%AF%A6%E4%BD%9C%E5%92%8C%E4%BB%8B%E7%B4%B9%EF%BC%9A%E5%A6%82%E4%BD%95%E5%B0%87%E4%BD%A0%E7%9A%84-Hexo-%E4%BF%AE%E6%94%B9%E6%8F%90%E4%BA%A4PR%E5%88%B0%E5%AE%98%E6%96%B9-hexojs-site-%E5%84%B2%E5%AD%98%E5%BA%AB/2.png\"><br>選擇要合併的 branch，我剛剛創的分支是 <code>modify240909</code>，所以把它併入 <code>site</code> 的 <code>master</code> 當中。<br><img src=\"/hexo-theme-animal-site/assets/images/GitHub-fork%E5%AF%A6%E4%BD%9C%E5%92%8C%E4%BB%8B%E7%B4%B9%EF%BC%9A%E5%A6%82%E4%BD%95%E5%B0%87%E4%BD%A0%E7%9A%84-Hexo-%E4%BF%AE%E6%94%B9%E6%8F%90%E4%BA%A4PR%E5%88%B0%E5%AE%98%E6%96%B9-hexojs-site-%E5%84%B2%E5%AD%98%E5%BA%AB/3.png\"><br>通常比較大的開源項目當你提 PR 時，會要求你填寫一些資料。<br><img src=\"/hexo-theme-animal-site/assets/images/GitHub-fork%E5%AF%A6%E4%BD%9C%E5%92%8C%E4%BB%8B%E7%B4%B9%EF%BC%9A%E5%A6%82%E4%BD%95%E5%B0%87%E4%BD%A0%E7%9A%84-Hexo-%E4%BF%AE%E6%94%B9%E6%8F%90%E4%BA%A4PR%E5%88%B0%E5%AE%98%E6%96%B9-hexojs-site-%E5%84%B2%E5%AD%98%E5%BA%AB/4.png\"></p>\n<h3 id=\"7-完成\"><a href=\"#7-完成\" class=\"headerlink\" title=\"7. 完成\"></a>7. 完成</h3><p>接下來等待審核！<br><img src=\"/hexo-theme-animal-site/assets/images/GitHub-fork%E5%AF%A6%E4%BD%9C%E5%92%8C%E4%BB%8B%E7%B4%B9%EF%BC%9A%E5%A6%82%E4%BD%95%E5%B0%87%E4%BD%A0%E7%9A%84-Hexo-%E4%BF%AE%E6%94%B9%E6%8F%90%E4%BA%A4PR%E5%88%B0%E5%AE%98%E6%96%B9-hexojs-site-%E5%84%B2%E5%AD%98%E5%BA%AB/5.png\"><br>原作者就可以審核你的變更，並決定是否將你的代碼合併到原始儲存庫中。</p>\n<h3 id=\"8-審核完成\"><a href=\"#8-審核完成\" class=\"headerlink\" title=\"8. 審核完成\"></a>8. 審核完成</h3><p>可以看到我的 PR 有一個 <code>Open</code> 代表還在審核中，另外兩個 <code>Closed</code> 代表審核完成。<br><img src=\"/hexo-theme-animal-site/assets/images/GitHub-fork%E5%AF%A6%E4%BD%9C%E5%92%8C%E4%BB%8B%E7%B4%B9%EF%BC%9A%E5%A6%82%E4%BD%95%E5%B0%87%E4%BD%A0%E7%9A%84-Hexo-%E4%BF%AE%E6%94%B9%E6%8F%90%E4%BA%A4PR%E5%88%B0%E5%AE%98%E6%96%B9-hexojs-site-%E5%84%B2%E5%AD%98%E5%BA%AB/6.png\"><br>因為我才剛提出 PR，這邊給大家看我以前提出並審核通過的 PR。</p>\n<p>審核完成後會把你的 PR 併入 <code>Master</code> 當中，會從 <code>Open</code> 調成 <code>Closed</code>。<br><img src=\"/hexo-theme-animal-site/assets/images/GitHub-fork%E5%AF%A6%E4%BD%9C%E5%92%8C%E4%BB%8B%E7%B4%B9%EF%BC%9A%E5%A6%82%E4%BD%95%E5%B0%87%E4%BD%A0%E7%9A%84-Hexo-%E4%BF%AE%E6%94%B9%E6%8F%90%E4%BA%A4PR%E5%88%B0%E5%AE%98%E6%96%B9-hexojs-site-%E5%84%B2%E5%AD%98%E5%BA%AB/7.png\"></p>\n<p>**更新 (2024-09-10)**：我的 PR 審核完成了</p>\n<p><img src=\"/hexo-theme-animal-site/assets/images/GitHub-fork%E5%AF%A6%E4%BD%9C%E5%92%8C%E4%BB%8B%E7%B4%B9%EF%BC%9A%E5%A6%82%E4%BD%95%E5%B0%87%E4%BD%A0%E7%9A%84-Hexo-%E4%BF%AE%E6%94%B9%E6%8F%90%E4%BA%A4PR%E5%88%B0%E5%AE%98%E6%96%B9-hexojs-site-%E5%84%B2%E5%AD%98%E5%BA%AB/8.png\"><br>我新提的 PR 也變成 <code>Closed</code> 的狀態了！<br><img src=\"/hexo-theme-animal-site/assets/images/GitHub-fork%E5%AF%A6%E4%BD%9C%E5%92%8C%E4%BB%8B%E7%B4%B9%EF%BC%9A%E5%A6%82%E4%BD%95%E5%B0%87%E4%BD%A0%E7%9A%84-Hexo-%E4%BF%AE%E6%94%B9%E6%8F%90%E4%BA%A4PR%E5%88%B0%E5%AE%98%E6%96%B9-hexojs-site-%E5%84%B2%E5%AD%98%E5%BA%AB/9.png\"><br>By the way，你在 Hexo 官網可以找到我做的主題！<br><img src=\"/hexo-theme-animal-site/assets/images/GitHub-fork%E5%AF%A6%E4%BD%9C%E5%92%8C%E4%BB%8B%E7%B4%B9%EF%BC%9A%E5%A6%82%E4%BD%95%E5%B0%87%E4%BD%A0%E7%9A%84-Hexo-%E4%BF%AE%E6%94%B9%E6%8F%90%E4%BA%A4PR%E5%88%B0%E5%AE%98%E6%96%B9-hexojs-site-%E5%84%B2%E5%AD%98%E5%BA%AB/10.png\"><br><img src=\"/hexo-theme-animal-site/assets/images/GitHub-fork%E5%AF%A6%E4%BD%9C%E5%92%8C%E4%BB%8B%E7%B4%B9%EF%BC%9A%E5%A6%82%E4%BD%95%E5%B0%87%E4%BD%A0%E7%9A%84-Hexo-%E4%BF%AE%E6%94%B9%E6%8F%90%E4%BA%A4PR%E5%88%B0%E5%AE%98%E6%96%B9-hexojs-site-%E5%84%B2%E5%AD%98%E5%BA%AB/11.png\"></p>\n","categories":["教學"],"tags":["教學","GitHub","開源"]}]